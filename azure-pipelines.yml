# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  flaskApp: 'app.py'
  flaskEnv: 'development'
  dockerRegistryServiceConnection: 'dockerRegistryServiceConnection'
  containerRegistry: 'containerRegistry'
  dockerRepository: 'librarymanagement'
  tag: '$(Build.BuildId)'

stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: build
    steps:
    - task: CmdLine@2
      displayName: 'Install dependencies'
      inputs:
        command: 'pip install -r requirements.txt'
    - task: CmdLine@2
      displayName: 'Set environment variables'
      inputs:
        command: |
          export FLASK_APP=$(flaskApp)
          export FLASK_ENV=$(flaskEnv)
    - task: CmdLine@2
      displayName: 'Run Flask app'
      inputs:
        command: 'flask run'
    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: 'build'
        Dockerfile: '**/Dockerfile'
        containerRegistry: $(containerRegistry)
        repository: $(dockerRepository)
        tags: $(tag)
